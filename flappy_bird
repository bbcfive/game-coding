// flappy bird.cpp : 控制台应用程序
//

#include "stdafx.h"
#include "stdio.h"
//#include "stdlib.h"
#include "windows.h"
#include "conio.h"

//全局变量
int bird_x, bird_y;//定义一只小鸟
int high, width;//设置边界
int bar1_y, bar1_xDown, bar1_xTop;//障碍物
int life=3,score;//设置生命，分数

void gotoxy(int x, int y)//类似于清屏函数，光标移动到原点位置进行重画
{
	HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(handle, pos);
}

void HideCursor()//光标清理函数
{
	CONSOLE_CURSOR_INFO cursor_info = { 1, 0 };
	SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &cursor_info);
}

void startup()//初始化游戏
{	
	high = 20;
	width = 30;
	bird_x = 0;
	bird_y = width / 3;
	bar1_y = width;
	bar1_xDown = high / 3;
	bar1_xTop = high / 2;
}

void show()//显示界面
{
	gotoxy(0, 0);
	HideCursor();
	int i, j;
	for (i = 0; i < high; i++)
	{
		for (j = 0; j < width; j++)
		{
			if ((i == bird_x) && (j == bird_y))
				printf("@");//输出小鸟
			else if ((j == bar1_y) && ((i < bar1_xDown) || (i > bar1_xTop)))
				printf("*");//输出墙壁
			else
				printf(" ");
		}
		printf("\n");
	}
	printf("score:%d life:%d\n", score,life);
}

void updateWithoutInput()
{
	if (bird_y == bar1_y) 
	{
		if ((bird_x <= bar1_xDown) || (bird_x >= bar1_xTop))//小鸟撞上障碍物
			life--;
		else//小鸟避开障碍物
			score++;
	}

	if ((bird_x > high)||(bird_y<=0))//小鸟跑出屏幕
	{
		life--;
		bar1_y = width;
		int temp = rand() % int(high*0.8);
		bar1_xDown = temp - high / 10;
		bar1_xTop = temp + high / 10;
	}
	
	if (bar1_y <= 0)//障碍物跑出屏幕
	{
		bar1_y = width;
		int temp = rand() % int(high*0.8);
		bar1_xDown = temp - high / 10;
		bar1_xTop = temp + high / 10;
	}

	if (life <= 0)//生命值用完，游戏结束
	{
		printf("game over\n");
		system("pause\n");
		exit(0);
	}

	bird_x++;
	bar1_y--;
	Sleep(150);//使小鸟速度变慢，但流畅性不佳

	//以下这种方式不能使用,虽然能达到降速效果，但会导致分数、生命值混乱；因为在bar1_y与bird_y的值相等状态能持续10个speed单位，因此用sleep函数
	/*static int speed = 0;
	if ((bird_x > -1)&&(bar1_y>-2))
	{
		if (speed < 20)
			speed++;
		if (speed == 20)
		{
			bird_x++;
			bar1_y--;
			speed = 0;
		}
	}*/
}

void updateWithInput()
{
	
	if (_kbhit())
	{
		char input = _getch();
		if (input == ' ')
			bird_x = bird_x-2;
		if (input == 'a')
			bird_y--;
		if (input == 'd')
			bird_y++;
		/*if (input == 'w')
			bird_x--;
		if (input == 's')
			bird_x++;*/
	}

}
int main()
{
	startup();
	while (1)
	{
		show();
		updateWithoutInput();
		updateWithInput();
	}
	return 0;
}

